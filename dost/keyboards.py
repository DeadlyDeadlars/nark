from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from config import PACKAGING_OPTIONS, REVIEWS_LINK, SUPPORT_USERNAME
from catalog import get_product_names, get_variants_for_product

def get_main_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìù –û—Ç–∑—ã–≤—ã", url=REVIEWS_LINK)],
            [InlineKeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å", callback_data="about")],
            [InlineKeyboardButton(text="üõí –ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É", callback_data="order")]
        ]
    )
    
    return keyboard

def get_products_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ (–∏–∑ —Ñ–∞–π–ª–∞ –∫–∞—Ç–∞–ª–æ–≥–∞)"""
    buttons = []
    for product_name in get_product_names():
        buttons.append([InlineKeyboardButton(text=product_name, callback_data=f"product:{product_name}")])
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_packaging_keyboard(product_name: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞—Å–æ–≤–∫–∏/–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    buttons = []
    variants = get_variants_for_product(product_name)
    if variants:
        for i, v in enumerate(variants):
            buttons.append([InlineKeyboardButton(text=f"{v.weight} ‚Äî {int(v.price) if v.price.is_integer() else v.price} ‚ÇΩ", callback_data=f"packaging:{i}")])
    else:
        for i, option in enumerate(PACKAGING_OPTIONS):
            buttons.append([InlineKeyboardButton(text=option, callback_data=f"packaging:{i}")])
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_products")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_cancel_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="cancel_order")]
        ]
    )
    
    return keyboard

def get_admin_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats"),
                InlineKeyboardButton(text="üìã –í—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_orders")
            ],
            [
                InlineKeyboardButton(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data="admin_reply"),
                InlineKeyboardButton(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")
            ]
        ]
    )
    
    return keyboard

def get_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_order"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_order")
            ]
        ]
    )
    
    return keyboard 

def get_payment_method_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É", callback_data="pay_card")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_order")]
        ]
    )
    return keyboard

def get_payment_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã", callback_data="copy_card")],
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data="confirm_payment")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_order")]
        ]
    )
    return keyboard

def get_payment_retry_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –Ω–µ—É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞"""
    username = SUPPORT_USERNAME.lstrip('@') if SUPPORT_USERNAME else ''
    operator_url = f"https://t.me/{username}" if username else None
    rows = [
        [InlineKeyboardButton(text="üîÅ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑", callback_data="retry_payment")],
    ]
    if operator_url:
        rows.append([InlineKeyboardButton(text="üë§ –ù–∞–ø–∏—Å–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—É", url=operator_url)])
    rows.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_order")])
    return InlineKeyboardMarkup(inline_keyboard=rows)