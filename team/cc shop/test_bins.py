#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ BIN'–æ–≤
"""

from database import Database

def test_bins_generation():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ BIN'–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = Database()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω
    countries = db.get_countries()
    print(f"üåç –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–∞–Ω: {len(countries)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BIN'–æ–≤
    total_bins = 0
    for country in countries[:5]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–∞–Ω
        bins = db.get_bins_by_country(country['code'])
        print(f"  {country['flag']} {country['name']}: {len(bins)} BIN'–æ–≤")
        total_bins += len(bins)
    
    print(f"üìä –í—Å–µ–≥–æ BIN'–æ–≤: {total_bins}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ BIN'—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã
    if total_bins > 0:
        print("‚úÖ BIN'—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
    else:
        print("‚ùå BIN'—ã –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω–æ–≤–æ
        print("üîÑ –ü—Ä–æ–±—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å BIN'—ã –∑–∞–Ω–æ–≤–æ...")
        db.generate_random_bins_for_all_countries()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
        total_bins = 0
        for country in countries[:5]:
            bins = db.get_bins_by_country(country['code'])
            print(f"  {country['flag']} {country['name']}: {len(bins)} BIN'–æ–≤")
            total_bins += len(bins)
        
        if total_bins > 0:
            print("‚úÖ BIN'—ã —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏!")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å BIN'—ã!")

if __name__ == "__main__":
    test_bins_generation()
